import java.util.*;        
import java.lang.*;      
public class Main {      
    public static <E extends Comparable<E>> int binarySearch(E[] list,E key) {      
        boolean changed;      
        do{      
            changed = false;      
            E temp;      
            for(int j = 0; j < list.length-1; j++) {      
                int max = list[j].compareTo(list[j+1]);      
                if(max > 0) {      
                    temp = list[j];      
                    list[j] = list[j+1];      
                    list[j+1] = temp;      
                    changed = true;      
                }      
            }      
        }while(changed);      
        int l = 0;      
        int r = list.length;      
        boolean check = false;      
        int mid = 0;      
        /*for(int k = 0; k < list.length; k++) {   
            System.out.print(list[k] + " ");   
        }*/      
              
        while(l < r) {      
            mid = ( l + r )/ 2;      
            int cmp = list[mid].compareTo(key);      
            if(cmp == 0) {      
                check = true;      
                mid-=1;      
                break;      
            }      
            if(cmp < 0) {      
                l = mid + 1;      
                mid = ( l + r )/ 2;      
                cmp = list[mid].compareTo(key);      
                if(cmp == 0) {      
                check = true;      
                break;      
                }      
            }      
            if(cmp > 0) {      
                r = mid - 1;      
                mid = ( l + r )/ 2;      
                cmp = list[mid].compareTo(key);      
                if(cmp == 0) {      
                check = true;      
                break;      
                }      
            }      
        }      
        if(check == true) {      
            return mid;      
        }      
        else {      
            return -1;      
        }      
    }      
    /*public static <T extends Comparable<T>> int binarySearch(T[] array, T value, int lo, int hi) {   
    if (lo < hi) {   
        int mid = (lo / 2) + (hi / 2);   
        int cmp = array[mid].compareTo(value);   
        if (cmp < 0) return binarySearch(array, value, lo, mid - 1);   
        if (cmp > 0) return binarySearch(array, value, mid + 1, hi);   
        return mid;   
    } // if   
    return -1;   
    }*/      
    public static void main(String[] args) {          
        Scanner sc = new Scanner(System.in);          
        String t = sc.next();      
        switch(t){      
            case "String" :      
                int n =sc.nextInt();      
                String[] s = new String[n];      
                for(int i = 0; i < n; i++) {      
                    s[i] = sc.next();      
                }      
                String ss = sc.next();      
                if(binarySearch(s,ss) == -1){      
                    System.out.println("Not found.");      
                }      
                else {      
                    System.out.println(ss + " is found in the "+ binarySearch(s,ss) + "'th place.");      
                }      
            break;      
            case "Character" :      
                int n2 =sc.nextInt();      
                String[] s2 = new String[n2];      
                for(int i = 0; i < n2; i++) {      
                    s2[i] = sc.next();      
                }      
                String ss2 = sc.next();      
                if(binarySearch(s2,ss2) == -1){      
                    System.out.println("Not found.");      
                }      
                else {      
                    System.out.println(ss2 + " is found in the "+ binarySearch(s2,ss2) + "'th place.");      
                }      
            break;      
            case "Integer" :      
                int n3 =sc.nextInt();      
                String[] s3 = new String[n3];      
                for(int i = 0; i < n3; i++) {      
                    s3[i] = sc.next();      
                }      
                String ss3 = sc.next();      
                if(binarySearch(s3,ss3) == -1){      
                    System.out.println("Not found.");      
                }      
                else {      
                    System.out.println(ss3 + " is found in the "+ binarySearch(s3,ss3) + "'th place.");      
                }      
            break;   
            case "Double" :      
                int n4 =sc.nextInt();      
                Object[] s4 = new Double[n4];      
                for(int i = 0; i < n4; i++) {      
                    s4[i] = sc.nextDouble();      
                }      
                double ss4 = sc.nextDouble();  
                  
                if(-1 == binarySearch((Double [])s4,(Double)ss4)){      
                    System.out.println("Not found.");      
                }      
                else {      
                    System.out.printf("%.3f is found in the %d'th place.\n", ss4, binarySearch((Double [])s4,(Double)ss4));      
                }      
            break;   
        }      
                      
    }          
}  